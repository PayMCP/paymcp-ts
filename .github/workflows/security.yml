name: Security Scanning

on:
  push:
    branches: [ main, master, develop, feat/** ]
  pull_request:
    branches: [ main, master, develop ]
  schedule:
    # Run weekly on Mondays at 2 AM UTC
    - cron: '0 2 * * 1'
  workflow_dispatch:

jobs:
  codeql:
    name: CodeQL Analysis
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write

    strategy:
      fail-fast: false
      matrix:
        language: ['javascript']

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Initialize CodeQL
      uses: github/codeql-action/init@v3
      with:
        languages: ${{ matrix.language }}
        config-file: ./.github/codeql/codeql-config.yml

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Build project
      run: npm run build

    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v3
      with:
        category: "/language:${{matrix.language}}"

  dependency-scan:
    name: Dependency Vulnerability Scan
    runs-on: ubuntu-latest
    permissions:
      contents: read
      security-events: write

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Run npm audit
      run: |
        npm audit --audit-level=moderate --json > npm-audit.json || true
        cat npm-audit.json

    - name: Install additional security tools
      run: |
        npm install -g audit-ci
        npm install -g better-npm-audit

    - name: Run audit-ci
      run: |
        audit-ci --moderate --report-type json --output-file audit-ci-results.json || true

    - name: Run better-npm-audit
      run: |
        better-npm-audit audit --json > better-audit.json || true

    - name: Upload audit results
      uses: actions/upload-artifact@v4
      with:
        name: dependency-scan-results
        path: |
          npm-audit.json
          audit-ci-results.json
          better-audit.json
        retention-days: 30

  eslint-security:
    name: ESLint Security Scan
    runs-on: ubuntu-latest
    permissions:
      contents: read
      security-events: write

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Install ESLint security plugins
      run: |
        npm install --save-dev @typescript-eslint/eslint-plugin @typescript-eslint/parser
        npm install --save-dev eslint-plugin-security
        npm install --save-dev eslint-plugin-no-secrets

    - name: Run ESLint security scan
      run: |
        npx eslint src/ --ext .ts,.js --format json --output-file eslint-security.json || true
        npx eslint src/ --ext .ts,.js --format @microsoft/eslint-formatter-sarif --output-file eslint-security.sarif || true

    - name: Upload ESLint SARIF to GitHub
      uses: github/codeql-action/upload-sarif@v3
      if: always()
      with:
        sarif_file: eslint-security.sarif

    - name: Upload ESLint results
      uses: actions/upload-artifact@v4
      with:
        name: eslint-security-results
        path: |
          eslint-security.json
          eslint-security.sarif
        retention-days: 30

  semgrep:
    name: Semgrep SAST Scan
    runs-on: ubuntu-latest
    permissions:
      contents: read
      security-events: write

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Run Semgrep
      uses: semgrep/semgrep-action@v1
      with:
        config: >-
          p/security-audit
          p/javascript
          p/typescript
          p/owasp-top-ten
          p/cwe-top-25
        generateSarif: "1"

    - name: Upload SARIF file to GitHub Advanced Security
      uses: github/codeql-action/upload-sarif@v3
      if: always()
      with:
        sarif_file: semgrep.sarif

  custom-compliance:
    name: Custom Compliance Scan
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'

    - name: Install Python for compliance script
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Install Python dependencies
      run: |
        pip install requests pyyaml

    - name: Run custom compliance scan
      run: |
        python .github/scripts/compliance-scan.py

    - name: Upload compliance results
      uses: actions/upload-artifact@v4
      with:
        name: compliance-scan-results
        path: compliance-scan-results.json
        retention-days: 30

  security-report:
    name: Generate Security Report
    runs-on: ubuntu-latest
    needs: [codeql, dependency-scan, eslint-security, semgrep, custom-compliance]
    if: always()
    permissions:
      contents: read
      pull-requests: write
      security-events: read

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'

    - name: Download all artifacts
      uses: actions/download-artifact@v4

    - name: Install Python for report generation
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Generate security report
      run: |
        python .github/scripts/generate-security-report.py

    - name: Comment PR with security summary
      if: github.event_name == 'pull_request'
      uses: actions/github-script@v7
      with:
        script: |
          const fs = require('fs');
          const path = './security-summary.md';
          
          if (fs.existsSync(path)) {
            const summary = fs.readFileSync(path, 'utf8');
            
            // Find existing security comment
            const comments = await github.rest.issues.listComments({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
            });
            
            const existingComment = comments.data.find(
              comment => comment.body.includes('ðŸ”’ Security Scan Results')
            );
            
            if (existingComment) {
              await github.rest.issues.updateComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                comment_id: existingComment.id,
                body: summary
              });
            } else {
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.issue.number,
                body: summary
              });
            }
          }

    - name: Upload final security report
      uses: actions/upload-artifact@v4
      with:
        name: security-report
        path: |
          security-summary.md
          security-detailed-report.json
        retention-days: 90

    - name: Security gate check
      run: |
        python .github/scripts/security-gate.py