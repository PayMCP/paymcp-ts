name: "CodeQL Security Scanning"

on:
  push:
    branches: [ "main", "develop" ]
  pull_request:
    branches: [ "main", "develop" ]
  schedule:
    # Run weekly on Sundays at 3:00 AM UTC
    - cron: '0 3 * * 0'

# Cancel previous runs if a new one is triggered
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  analyze:
    name: "CodeQL / Analyze (javascript-typescript)"
    runs-on: ubuntu-latest
    timeout-minutes: 30
    
    # Least-privilege permissions
    permissions:
      # Required for CodeQL to write security events
      security-events: write
      # Required to checkout the repository
      contents: read
      # Required for private repos to read actions
      actions: read

    strategy:
      fail-fast: false
      matrix:
        language: [ 'javascript-typescript' ]
        # Add other languages as needed: 'python', 'java', 'go', 'csharp', 'cpp', 'ruby'

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'

    # Initialize CodeQL tools for scanning
    - name: Initialize CodeQL
      uses: github/codeql-action/init@v3
      with:
        languages: ${{ matrix.language }}
        # Optional: Use custom CodeQL config to exclude files
        # config-file: ./.github/codeql-config.yml

    - name: Setup pnpm
      run: npm install -g pnpm@10.12.4

    - name: Cache pnpm dependencies
      uses: actions/cache@v4
      with:
        path: ~/.pnpm-store
        key: ${{ runner.os }}-pnpm-${{ hashFiles('**/pnpm-lock.yaml') }}
        restore-keys: |
          ${{ runner.os }}-pnpm-

    # Install dependencies (required for TypeScript analysis)
    - name: Install dependencies
      run: pnpm install --frozen-lockfile

    # Build the project (CodeQL needs built artifacts for TypeScript)
    - name: Build project
      run: pnpm run build

    # Perform CodeQL Analysis
    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v3
      with:
        category: "/language:${{matrix.language}}"